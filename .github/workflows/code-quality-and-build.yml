name: Code Quality and Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies
      run: npm install
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Check Prettier formatting
      run: npm run format:check
      
    - name: Validate package.json
      run: npm run validate || echo "No validate script found"
      
  build-test:
    runs-on: ubuntu-latest
    needs: lint-and-format
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Install dependencies
      run: npm install
      
    - name: Test development build
      run: |
        npm run dev
        # Verify manifest.json was created
        test -f manifest.json
        # Verify popup.html exists
        test -f popup.html
        echo "Development build successful"
        
    - name: Test production build
      run: |
        npm run prod
        # Verify bundled files were created
        test -f content-bundled.js
        test -f popup-bundled.js
        echo "Production build successful"
        
    - name: Validate manifest files
      run: |
        # Check if manifest.json is valid JSON
        cat manifest.json | jq empty
        echo "Manifest validation successful"
        
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: extension-build-${{ github.sha }}
        path: |
          manifest.json
          popup.html
          content-bundled.js
          popup-bundled.js
          icons/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    needs: lint-and-format
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Install dependencies
      run: npm install
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for sensitive files
      run: |
        # Check for common sensitive files/patterns
        sensitive_files=$(find . -name "*.key" -o -name "*.pem" -o -name ".env" | grep -v node_modules)
        if [ -n "$sensitive_files" ]; then
          echo "Sensitive files found:"
          echo "$sensitive_files"
          exit 1
        fi
        echo "No sensitive files found"

  extension-validation:
    runs-on: ubuntu-latest
    needs: build-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build extension
      run: npm run prod
      
    - name: Validate extension structure
      run: |
        echo "Validating extension structure..."
        
        # Check required files exist
        files=("manifest.json" "popup.html" "content-bundled.js" "popup-bundled.js")
        for file in "${files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "Required file missing: $file"
            exit 1
          fi
        done
        
        # Check manifest.json structure
        if ! jq -e '.name and .version and .manifest_version' manifest.json > /dev/null; then
          echo "Invalid manifest.json structure"
          exit 1
        fi
        
        # Check if icons exist
        if [ ! -d "icons" ]; then
          echo "Icons directory missing"
          exit 1
        fi
        
        echo "Extension structure validation passed"
        
    - name: Check file sizes
      run: |
        echo "Checking file sizes..."
        
        # Check if bundled files are reasonable size (not empty, not too large)
        for file in content-bundled.js popup-bundled.js; do
          size=$(stat -c%s "$file")
          if [ $size -lt 100 ]; then
            echo "$file is too small ($size bytes) - might be empty"
            exit 1
          fi
          if [ $size -gt 1048576 ]; then  # 1MB
            echo "$file is large ($size bytes) - consider optimization"
          fi
          echo "$file size: $size bytes"
        done

  cross-platform-test:
    runs-on: ${{ matrix.os }}
    needs: lint-and-format
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies
      run: npm install
      
    - name: Test build on ${{ matrix.os }}
      run: |
        npm run dev
        npm run prod
        
    - name: Test scripts on ${{ matrix.os }}
      run: |
        npm run lint
        npm run format:check
